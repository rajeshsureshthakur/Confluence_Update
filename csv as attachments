import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

import java.io.File;
import java.util.Arrays;
import java.util.List;

public class ConfluenceCSVUploader {
    private final String confluenceUrl;
    private final String apiToken;
    private final String pageId;
    private final String csvFolderPath;

    public ConfluenceCSVUploader(String confluenceUrl, String apiToken, String pageId, String csvFolderPath) {
        this.confluenceUrl = confluenceUrl;
        this.apiToken = apiToken;
        this.pageId = pageId;
        this.csvFolderPath = csvFolderPath;
    }

    private void uploadFile(File file) throws Exception {
        String url = String.format("%s/rest/api/content/%s/child/attachment", confluenceUrl, pageId);
        
        HttpClient client = HttpClients.createDefault();
        HttpPost post = new HttpPost(url);
        
        // Set required headers
        post.setHeader("Authorization", "Bearer " + apiToken);
        post.setHeader("X-Atlassian-Token", "nocheck");
        
        // Create multipart entity
        MultipartEntityBuilder builder = MultipartEntityBuilder.create();
        builder.addBinaryBody("file", file, ContentType.DEFAULT_BINARY, file.getName());
        
        post.setEntity(builder.build());
        
        // Execute request
        HttpResponse response = client.execute(post);
        int statusCode = response.getStatusLine().getStatusCode();
        String responseBody = EntityUtils.toString(response.getEntity());
        
        if (statusCode >= 200 && statusCode < 300) {
            System.out.println("Successfully uploaded: " + file.getName());
        } else {
            System.err.println("Failed to upload " + file.getName() + 
                ". Status: " + statusCode + 
                ". Response: " + responseBody);
        }
    }

    public void uploadAll() throws Exception {
        File folder = new File(csvFolderPath);
        File[] files = folder.listFiles((dir, name) -> name.toLowerCase().endsWith(".csv"));
        
        if (files == null || files.length == 0) {
            System.out.println("No CSV files found in: " + csvFolderPath);
            return;
        }

        System.out.println("Found " + files.length + " CSV files");
        List<File> csvFiles = Arrays.asList(files);
        
        for (File file : csvFiles) {
            try {
                System.out.println("Uploading: " + file.getName());
                uploadFile(file);
            } catch (Exception e) {
                System.err.println("Error uploading " + file.getName() + ": " + e.getMessage());
            }
        }
    }

    public static void main(String[] args) {
        String confluenceUrl = "https://your-domain.atlassian.net"; // No /wiki at the end
        String apiToken = "your-api-token";
        String pageId = "123456";
        String csvFolderPath = "path/to/csv/files";

        try {
            ConfluenceCSVUploader uploader = new ConfluenceCSVUploader(
                confluenceUrl, apiToken, pageId, csvFolderPath);
            uploader.uploadAll();
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
